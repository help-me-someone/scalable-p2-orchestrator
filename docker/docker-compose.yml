version: '3'
 
volumes:
  traefik-ssl-certs:
    driver: local
  my-db:
    driver: local

services:
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'toktik-db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - back-office
    ports:
      - "3306:3306"

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - ../:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-ssl-certs:/ssl-certs
    labels:
      - traefik.enable=true
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowheaders=*,X-Custom-Header,X-Video-Name,Hx-Request,Hx-Current-Url,Hx-Target,Hx-Trigger"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolalloworiginlist=http://localhost:8000"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.set-cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.stripprefix.stripprefix.prefixes=/auth,/api"
      - "traefik.http.middlewares.my-auth.forwardauth.address=http://auth:7887/"
      - "traefik.http.middlewares.my-auth.forwardauth.trustforwardheader=true"
      - "traefik.http.middlewares.my-auth.forwardauth.authresponseheaders=X-Username,Access-Control-Allow-Origin,Access-Control-Allow-Headers"
    networks:
      - front-office
      - back-office

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - back-office
    depends_on:
      - traefik

  worker:
    build:
      context: ../components/scalable-p2-worker
      dockerfile: Dockerfile
    networks: 
      - back-office
    restart: always
    depends_on:
      - mysql
      - redis
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} 
      - DB_IP=mysql:3306
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - MODE=DEBUG
      - REDIS_IP=redis

  backend:
    build:
      context: ../components/scalable-p2-backend
      dockerfile: Dockerfile
    networks:
      - front-office
      - back-office
    depends_on:
      - worker
    restart: always
    ports:
      - "7000:7000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=(Host(`toktik.localhost`) && PathPrefix(`/api/`))
      - traefik.http.services.backend.loadbalancer.server.port=7000
      - traefik.http.routers.backend.middlewares=stripprefix,set-cors,my-auth
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} 
      - API_GATEWAY_URL=toktik.localhost
      - DB_IP=mysql:3306
      - DB_USERNAME=user
      - DB_PASSWORD=password
      - REDIS_IP=redis
      - BACKEND_URL=backend:7000

  # frontend:
  #   build:
  #     context: ../components/scalable-p2-frontend
  #     dockerfile: Dockerfile
  #   environment:
  #   - API_GATEWAY_URL=toktik.localhost
  #   - BACKEND_URL=backend:7000
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - traefik
  #   networks:
  #     - front-office
  #     - back-office

  auth:
    build:
      context: ../components/scalable-p2-user-svc
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - traefik
    networks:
      - back-office
      - front-office 
    ports:
      - "7887:7887"
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.rule=(Host(`toktik.localhost`) && PathPrefix(`/auth/`))
      - traefik.http.services.auth.loadbalancer.server.port=7887
      - traefik.http.routers.auth.middlewares=stripprefix
    restart: always
    environment:
    - ALLOWED_ORIGIN=http://localhost:8000
    - DB_IP=mysql:3306
    - DB_USERNAME=user
    - DB_PASSWORD=password

  websocket:
    build:
      context: ../components/scalable-p2-websocket
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - traefik
    networks:
      - back-office
      - front-office 
    ports:
      - "5001:5001"
    environment:
    - ALLOWED_ORIGIN=http://localhost:8000
    - REDIS_IP=redis:6379
    - DB_IP=mysql:3306
    - DB_USERNAME=user
    - DB_PASSWORD=password
    labels:
    - traefik.enable=true
    - traefik.http.routers.websocket.rule=(Host(`toktik.ws.localhost`))
    - traefik.http.services.websocket.loadbalancer.server.port=5001

networks:
  front-office: # frontend and api gateway
  back-office: # backend microservices and api gateway

