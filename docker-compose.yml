version: '3'
 
volumes:
  traefik-ssl-certs:
    driver: local

services:

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.7
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - ./:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-ssl-certs:/ssl-certs
    labels:
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowheaders=*,X-Custom-Header"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolalloworiginlist=http://localhost:8000"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.set-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.set-cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.stripprefix.stripprefix.prefixes=/auth,/api"
      - "traefik.http.middlewares.my-auth.forwardauth.address=http://auth:7887/auth"
      - "traefik.http.middlewares.my-auth.forwardauth.trustforwardheader=true"
      - "traefik.http.middlewares.my-auth.forwardauth.authresponseheaders=username,Access-Control-Allow-Origin,Access-Control-Allow-Headers"
    networks:
      - front-office
      - back-office

  redis:
    image: redis:7
    restart: always
    networks:
      - back-office
    depends_on:
      - traefik

  back-end:
    build:
      context: ./scalable-p2-backend
      dockerfile: Dockerfile
    networks:
      - back-office
    depends_on:
      - traefik
    restart: always
    labels:
      - traefik.http.routers.back-end.rule=(Host(`toktik.localhost`) && PathPrefix(`/api/`))
      - traefik.http.services.back-end.loadbalancer.server.port=7000
      - traefik.http.routers.back-end.middlewares=stripprefix,set-cors,my-auth
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} 

  front-end:
    build:
      context: ./scalable-p2-frontend
      dockerfile: Dockerfile
    environment:
      API_GATEWAY_URL: "toktik.localhost"
    ports:
      - "8000:8000"
    depends_on:
      - traefik
    networks:
      - front-office

  auth:
    build:
      context: ./scalable-p2-api-gateway
      dockerfile: Dockerfile
    depends_on:
      - traefik
    networks:
      - back-office
      - front-office 
    labels:
      - traefik.http.routers.auth.rule=(Host(`toktik.localhost`) && PathPrefix(`/auth/`))
      - traefik.http.services.auth.loadbalancer.server.port=7887
      - traefik.http.routers.auth.middlewares=stripprefix

networks:
  front-office: # frontend and api gateway
  back-office: # backend microservices and api gateway

